<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ControlSource_HMI" Id="{9c7076ac-e9a0-49e8-a2ed-869844860327}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ControlSource_HMI EXTENDS FB_CyclicFB IMPLEMENTS I_PackML_ExternalController
VAR_INPUT
END_VAR

VAR_OUTPUT
END_VAR

VAR
    ipModule                  : I_PackML_Control;
    MainPMLControl_Simplified : ST_PackML_Control_Simplified;
    MainPMLControl_Standard   : ST_PackML_Control;
    R_HMICommand              : R_TRIG;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="I_CyclicFB" Id="{84782334-b09a-4d58-912e-345cc838267c}" />
    <Folder Name="I_PackML_ExternalController" Id="{924ef9dd-8490-413d-9bb4-7937a0a53086}" />
    <Property Name="Control" Id="{ff98ee39-89fb-4e54-a1db-acbeafa5f8b9}" FolderPath="I_PackML_ExternalController\">
      <Declaration><![CDATA[PROPERTY Control : SPT_BaseTypes.I_PackML_Control]]></Declaration>
      <Set Name="Set" Id="{8230ba6f-4593-4c79-ae25-3be33329942e}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ipModule := Control;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="CyclicLogic" Id="{ea647431-a03d-4025-8c63-3371230fbf22}" FolderPath="I_CyclicFB\">
      <Declaration><![CDATA[METHOD CyclicLogic
VAR
    i : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _InitComplete THEN
    _InitComplete := Initialize();
    RETURN;
END_IF

MainPMLControl_Standard.CurrentMode  := ipModule.CurrentMode;
MainPMLControl_Standard.CurrentState := ipModule.CurrentState;
FOR i := 1 TO 5 DO
    MainPMLControl_Standard.ModeNames[i] := F_UnitModeToString(UDINT_TO_DINT(i));
END_FOR

//Process HMI requests
R_HMICommand(CLK := (MainPMLControl_Simplified.ResetPressed XOR MainPMLControl_Simplified.StartPressed XOR
                    MainPMLControl_Simplified.StopPressed) XOR
                    (MainPMLControl_Standard.StateCommand <> E_PMLCommand.ePMLCommand_Undefined AND
                    ipModule.StateCommand <> MainPMLControl_Standard.StateCommand) XOR
                    (ipModule.ModeCommand <> MainPMLControl_Standard.ModeCommand));

IF R_HMICommand.Q THEN
    IF MainPMLControl_Simplified.ResetPressed AND MainPMLControl_Simplified.ResetPermissive AND
       MainPMLControl_Standard.CurrentState = E_PMLState.ePMLState_Aborted THEN
        ipModule.ChangeState(Tc3_PackML_V2.E_PMLCommand.ePMLCommand_Clear);
    ELSIF MainPMLControl_Simplified.ResetPressed AND MainPMLControl_Simplified.ResetPermissive THEN
        ipModule.ChangeState(Tc3_PackML_V2.E_PMLCommand.ePMLCommand_Reset);
    ELSIF MainPMLControl_Simplified.StartPressed AND MainPMLControl_Simplified.StartPermissive THEN
        IF MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Idle THEN
            ipModule.ChangeState(Tc3_PackML_V2.E_PMLCommand.ePMLCommand_Start);
        ELSIF MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Held THEN
            ipModule.ChangeState(Tc3_PackML_V2.E_PMLCommand.ePMLCommand_Unhold);
        END_IF
    ELSIF MainPMLControl_Simplified.StopPressed AND MainPMLControl_Simplified.StopPermissive THEN
        ipModule.ChangeState(Tc3_PackML_V2.E_PMLCommand.ePMLCommand_Stop);
    ELSIF ipModule.StateCommand <> MainPMLControl_Standard.StateCommand THEN
        ipModule.StateCommand := MainPMLControl_Standard.StateCommand;
    ELSIF ipModule.ModeCommand <> MainPMLControl_Standard.ModeCommand THEN
        ipModule.ModeCommand := MainPMLControl_Standard.ModeCommand;
    END_IF
END_IF

MainPMLControl_Simplified.StartPermissive :=
    MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Idle OR
    MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Held;

MainPMLControl_Simplified.StopPermissive :=
    (MainPMLControl_Standard.CurrentState <> Tc3_PackML_V2.E_PMLState.ePMLState_Stopped AND
     MainPMLControl_Standard.CurrentState <> Tc3_PackML_V2.E_PMLState.ePMLState_Clearing AND
     MainPMLControl_Standard.CurrentState <> Tc3_PackML_V2.E_PMLState.ePMLState_Aborted AND
     MainPMLControl_Standard.CurrentState <> Tc3_PackML_V2.E_PMLState.ePMLState_Aborting AND
     MainPMLControl_Standard.CurrentState <> Tc3_PackML_V2.E_PMLState.ePMLState_Undefined);

MainPMLControl_Simplified.ResetPermissive :=
    MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Complete OR
    MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Stopped OR
    MainPMLControl_Standard.CurrentState = Tc3_PackML_V2.E_PMLState.ePMLState_Aborted;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialize" Id="{d9b2b058-0095-4519-9f5a-55c148a000b9}">
      <Declaration><![CDATA[METHOD FINAL Initialize : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Registered THEN
    Initialize := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ModeChanged" Id="{d53f7d13-68ff-471b-bee3-8721f88dee3b}" FolderPath="I_PackML_ExternalController\">
      <Declaration><![CDATA[METHOD FINAL ModeChanged
VAR_INPUT
    NewMode : SPT_BaseTypes.E_PMLUnitMode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[MainPMLControl_Standard.ModeCommand := NewMode;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Registered" Id="{07512f23-cfd6-4936-ae62-fc462f8fd4b5}">
      <Declaration><![CDATA[PROPERTY Registered : BOOL]]></Declaration>
      <Get Name="Get" Id="{d99d8eb3-3b55-4b30-b890-3b1c0ca81e35}">
        <Declaration><![CDATA[VAR
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[Registered := ipModule <> 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="StateChanged" Id="{69365ea6-fd05-4493-b316-2fad5b7b2e48}" FolderPath="I_PackML_ExternalController\">
      <Declaration><![CDATA[METHOD FINAL StateChanged
VAR_INPUT
    NewState : SPT_BaseTypes.E_PMLCommand;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[MainPMLControl_Standard.StateCommand := NewState;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ControlSource_HMI">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.Control.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.CyclicLogic">
      <LineId Id="784" Count="41" />
      <LineId Id="827" Count="10" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.Initialize">
      <LineId Id="30" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.ModeChanged">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.Registered.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ControlSource_HMI.StateChanged">
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>